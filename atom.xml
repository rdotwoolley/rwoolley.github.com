<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[rdotwoolley]]></title>
  <link href="http://rwoolley.github.com/atom.xml" rel="self"/>
  <link href="http://rwoolley.github.com/"/>
  <updated>2012-02-05T13:21:40-07:00</updated>
  <id>http://rwoolley.github.com/</id>
  <author>
    <name><![CDATA[Robert Woolley]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Logging as a Service]]></title>
    <link href="http://rwoolley.github.com/blog/2012/02/01/logging-as-a-service/"/>
    <updated>2012-02-01T20:23:00-07:00</updated>
    <id>http://rwoolley.github.com/blog/2012/02/01/logging-as-a-service</id>
    <content type="html"><![CDATA[<p>I&#8217;ve been running into a logging challenge at work of late.  The usual issue.
Lots of logs, in lots of places, retention policies, governance issues,
reporting and (in my humble opinion the most important) support/debugging.  After some searching I
found logg.ly and Papertrail which offered what I wanted as a service.  Very
sweet.  Unfortunately I cannot use them in this implementation so I am pursuing
Graylog2 and logstash (another blogpost on that later). Right now I&#8217;m plugging
Papertrail into our demo system to see how it goes and how it fits with our
workflow.  I just wanted to cover off some first impressions with Papertrail.</p>

<!--more-->


<ol>
<li><p>Compatability
We&#8217;re running RHEL 5.5 (don&#8217;t judge) so we&#8217;re using syslog. Luckily there is a
little gem from the Papertrail folks that allows you to pipe your app logs into
their service.  remote_syslog works very well!
Ruby 1.8.7 is our ruby of choice for production systems.  We don&#8217;t put RVM on
production boxes so our setup is simple in that regard.</p></li>
<li><p>Ease of Use
I love how I can see a window into all the events flying by. This sounds
ridiculous but I can see issues just by watching patterns in the logs. It&#8217;s
like using the force but it works for me.  Of course you can adjust the
granularity to a specific system.  Search is the next best thing.  90% of my
time spent grovelling in app logs is due to an issue.  Papertrail allows you to
quickly match the user-time-wtf was going on tuple.  Better yet, you can save
any search and run it later. Helpful when you want to see if a fix worked.</p></li>
</ol>


<p>First impressions are great at this point. I think Papertrail has legs.  The
next phase of my thoughts will be around retention and compliance with acts
like HIPAA.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Postfix]]></title>
    <link href="http://rwoolley.github.com/blog/2012/01/23/postfix/"/>
    <updated>2012-01-23T20:33:00-07:00</updated>
    <id>http://rwoolley.github.com/blog/2012/01/23/postfix</id>
    <content type="html"><![CDATA[<p>Recently the team was working on some stuff in EC2. This is a bit new for us so
we&#8217;re figuring many things out as we go.  One thing work sharing is integrating
a PHP web app running in EC2 to Amazon&#8217;s Simple Email Service.  Following the
guides gets you 90% of the way but the last mile had a snag.  Full disclosure,
none of us is email experts.</p>

<p>We implemented the PHP - Postfix - Stunnel - SES approach advocated by AWS.
The older option used <a href="http://docs.amazonwebservices.com/ses/latest/DeveloperGuide/Scripts.MTAs.Postfix.html">perl</a> and worked for us.  However, we did want to go after the best practice approach and it&#8217;s outlined with the <a href="http://docs.amazonwebservices.com/ses/latest/DeveloperGuide/SMTP.MTAs.Postfix.html">postfix setup</a> and the <a href="http://docs.amazonwebservices.com/ses/latest/DeveloperGuide/SMTP.MTAs.SecureTunnel.html">stunnel</a> setup.</p>

<p>The snag we hit was as follows: using the perl tools we could queue an email in
SES.  Note, when in sandbox mode you can only send to and from the verified
email addresses.  Do yourself a solid and setup two addresses.  Otherwise
reading the mail.log file will blow your mind.  When we tried to queue an email
from our PHP app through postfix across the stunnel to SES the to and from
fields were, in a word, effed up.  Turns out setting the MyDestination
parameter in the main.cf file of the postfix config was the culprit.  Also, in
our PHP.ini file we ensure that we were starting sendmail with the suggested
unix flags but that&#8217;s a red herring for this issue.  Our solution was to unset
the MyDestination parm and pow.  Up and running.  We think.  Here&#8217;s to a great
push by @ericchernuka, @dannydotellis, and @swinglinetrade to solve a stinker.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello Octopress]]></title>
    <link href="http://rwoolley.github.com/blog/2012/01/18/hello-octopress/"/>
    <updated>2012-01-18T19:57:00-07:00</updated>
    <id>http://rwoolley.github.com/blog/2012/01/18/hello-octopress</id>
    <content type="html"><![CDATA[<p>So I&#8217;ve switched to Octopress.  I am quite impressed with it and markdown.
Elegantly simple.  This might even encourage me blog more.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DevOps - Where to start]]></title>
    <link href="http://rwoolley.github.com/blog/2011/12/16/devops-where-to-start/"/>
    <updated>2011-12-16T23:29:00-07:00</updated>
    <id>http://rwoolley.github.com/blog/2011/12/16/devops-where-to-start</id>
    <content type="html"><![CDATA[<p><em>post rescued from my wordpress blog</em></p>

<p>A little over a year ago one of the Systems Engineers on my team (@rhettdickson) suggested I look into DevOps and maybe start adopting some of the practices.  What a prophetic suggestion.  Presently the Ops team at Calgary Scientific is in the midst of implementing many great DevOps ideas and practices.  I wanted to share some of the key things I have learned about getting started with DevOps.  This post is heavy on the links, twitter, blogs and opinions but I hope you find it interesting.</p>

<!--more-->


<p>What is DevOps?
Well, that’s a loaded question.  I’ll start with what it’s not.  First, it’s not a team or a role.  If you have a DevOps team or a dedicated DevOps role I think you’re doing it wrong.  Secondly, it’s not a cult it’s a community.  An amazing, open, and strong community.  Just trawl through github and you’ll see hundreds of little projects aimed at getting things done and out the door as easily as possible.  The best part, no one hoards their knowledge or experience; they are all willing to share.</p>

<p>So What is it?
It’s a revolution to change the way we deploy solutions, manage the configuration of those deployments, leverage the cloud and perhaps best of all bridge the gap between the developer world and the operations world.  How do you get to there?  Well, here’s how I started.</p>

<p>Twitter: Follow these people.
Twitter is very active for DevOps, just watch the #devops topic and you’ll see.  There are many great tidbits that fly by during a day. This is the bare minimum list of people to follow on twitter.  Start here and add as you see fit.</p>

<p>John E. Vincent: @lusis
John is a DevOps badass.  He’s full of great ideas, sweet contributions to github and whenever I hit a snag chances are he’s already hit it, posted a blog entry about it, coded some sweetness and posted it on github.</p>

<p>Chris Hartjes: @chartjes
Chris is the great communicator of DevOps. Read his blog archives. I did and it’s been helping me win the battle within my organization to sell the concept of DevOps and its adoption. And he’s hilarious.</p>

<p>Julian Simpson: @BuildDoctor
Julian is the Doc Holliday of DevOps.  Got a continuous integration system in place and think it’s rock solid? Better be sure cuz he’s your huckleberry.  He’ll unplug it and make you prove the robustness.  Then show you where you went wrong and how to fix it.</p>

<p>Gareth Rushgrove: @garethr
Gareth is like Batman. Mild mannered gentleman by day  but prowling the rooftops looking for crappy build systems, lame deployment practices and beating it out of you by night.  This is mostly supposition but you’ll share my sentiments after following him.</p>

<p>Websites:
The proof is in the pudding.  If DevOps wasn’t a real thing then there wouldn’t be companies building tools and platforms for it.  There wouldn’t be meet ups, conferences or DevOps Days.  But there are all these things.  Here’s some useful links and blogs. Put these into Reeder, Early Edition, Google Reader or something equally useful.  RSS is old but still awesome.</p>

<p><a href="http://www.opscode.com/">OpsCode</a>
<a href="http://puppetlabs.com/">Puppet</a>
<a href="https://github.com/">GitHub</a>
<a href="http://www.build-doctor.com/">BuildDr</a>
<a href="http://morethanseven.net/">morethanseven</a>
<a href="http://blog.lusis.org/">Lusis</a>
<a href="http://www.littlehart.net/atthekeyboard/">Hartjes</a></p>

<p>One More Thing &#8230;
Remember how I said Gareth Rushgrove was like Batman?  Here’s another reason why: he has his own digital Batcave for all things DevOps.  Every week he compiles a wonderful email with all the neatest stuff in the world of DevOps and sends it out.  This is the most important thing you can do: sign up for his email.  <a href="http://devopsweekly.com/">devopsWeekly</a></p>

<p>There’s also an archive.  It’s the most accurate chronicle of the DevOps movement and laden with incredible information.  I wrote a script that pulled all the links out of the archive and pushed them to instapaper.  Then I read them all non-stop.</p>

<p>So, this would be how I started learning.  Maybe this will help you too.</p>
]]></content>
  </entry>
  
</feed>
