<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[rdotwoolley]]></title>
  <link href="http://rwoolley.github.com/atom.xml" rel="self"/>
  <link href="http://rwoolley.github.com/"/>
  <updated>2012-03-06T06:17:25-07:00</updated>
  <id>http://rwoolley.github.com/</id>
  <author>
    <name><![CDATA[Robert Woolley]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[zendesk]]></title>
    <link href="http://rwoolley.github.com/blog/2012/03/05/zendesk/"/>
    <updated>2012-03-05T20:19:00-07:00</updated>
    <id>http://rwoolley.github.com/blog/2012/03/05/zendesk</id>
    <content type="html"><![CDATA[<p><img src="http://a.yfrog.com/img612/170/bnjk.png" alt="zendesk Logo" /></p>

<p>We use zendesk and I will admit, I&#8217;m a huge fan.  We had the opportunity to retool our support system and a subtle suggestion from @ericchernuka led us to check out zendesk and what they were cooking.  Of course, if I&#8217;m going to rave about something I&#8217;m going to tell you why, in depth, because that&#8217;s what I do!  So, read on if you want to know about my favorite bits of zendesk in detail.  As a preview my love for zendesk is in part due to: SaaS, iOS/Android app, triggers, macros and integration!</p>

<!-- more -->


<h3>SaaS</h3>

<p>zendesk is clearly SaaS. You&#8217;re thinking yay, big dealâ€¦ but it is.  We&#8217;re still operating lean and the ability to ramp up or down on the support side of the business is huge to me.  Add in the fact that we went from nothing to a full on support system in weeks is very nice as well.  zendesk has a huge strength in that it is designed for support and support only.  The workflow is clean and tight and you can move through supporting a client with product issues quickly.  If you tie in your support KB you&#8217;re even further ahead because you can extend the service you offer and invite your clients into trackable forums.  A broad set of metrics can be used to constantly allow you to refine the support experience and content delivery.</p>

<h3>Mobile Apps</h3>

<p>This is really nice to have.  Support is like shit, it just happens.  It&#8217;s nice to have apps that keep me connected to the helpdesk and even interact with the issues as they come it. The convenience is stellar.</p>

<h3>Triggers and Avoiding SLA Dread</h3>

<p>We&#8217;re subject to some nasty audits.  Our SLAs are held with a revere that can only be called biblical.  We used to stress about making sure SLAs were met a great deal.  Then we automated those damn things and finally got some sleep.  To accomplish this, we used the trigger functionality and we can tailor the SLAs for each organization and ensure we&#8217;re nagging or getting nagged when the clock starts running out.  Some DevOps mottos extend even to support: automate nearly everything.</p>

<h3>Macros</h3>

<p>It is inevitable in the world of support: you will have to repeat yourself.  Luckily the zendesk designers recognized this and built the concept of a macro.  If you have a repeatable siutation on your hands you can simply build a macro and pa-POW apply that thing to issues that come in.  The joy? you can address issues even faster.</p>

<h3>Integration</h3>

<p>You can integrate EVERYTHING into zendesk.  Right now our integration buffet goes like this:</p>

<ul>
<li>GoodData</li>
<li>Jira</li>
<li>SalesForce</li>
<li>gmail</li>
</ul>


<p>I think that&#8217;s it but hey, we&#8217;re small.  We get stellar metrics from gooddata and use it as our support reporting dashboard.  zendesk issues are escalated to L3 through JIRA tapping into our engineering process with little impact.  Salesforce allows us to push data into the Salesteam without Ops munging in salesforce itself.  Lastly, it&#8217;s all email controlable for the people that don&#8217;t want to leave the comfort of their inbox.</p>

<h3>One more thing</h3>

<p>If you&#8217;re looking at a support tool, seriously consider this option.  @mikecousins has even rolled it into his shuttr project and he&#8217;s a very discerning customer.  I love the efficiency, the reporting and the interface.  Support is still a tax but this makes it fun and fast.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Graylog2 and Dreamy Ocelots]]></title>
    <link href="http://rwoolley.github.com/blog/2012/02/05/graylog2-and-dreamy-ocelots/"/>
    <updated>2012-02-05T17:00:00-07:00</updated>
    <id>http://rwoolley.github.com/blog/2012/02/05/graylog2-and-dreamy-ocelots</id>
    <content type="html"><![CDATA[<p>Logging! A repeat topic here these days. I have found myself in a position
where there are multiple instances of our product running and logging the snot
out of everything.  Point of interest: we cannot virtualize our product at this
point due do an OpenGL dependency and the need for some serious GPU power. So,
back to the main topic, how do you deal with logs all over the place? Logstash
and Graylog2 (though @lusis is doing some crazy stuff with logstash and 0mq)
are your best bet. For our testing we did a graylog2 implementatation on Ubuntu
\11.10 and logstash running on RHEL 5.5 piping the logs to our graylog2
instance.  I want to cover our setup (there are some learnings that are worth
noting as most people are ripping Ubuntu 11.04) and I am leaning towards
setting up a chef cookbook soon.</p>

<!-- more -->


<h2>Graylog2 Server</h2>

<ol>
<li>Setup MongoDB
So the mongo in the Ubuntu Repo is not the new hawtness. You&#8217;re best off to
follow these steps to and get the <a href="http://www.mongodb.org/display/DOCS/Ubuntu+and+Debian+packages">latest</a></li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-key adv --keyserver keyserver.ubuntu.com --recv 7F0CEB10
</span><span class='line'>sudo echo -e "deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen\n" >> /etc/apt/sources.list
</span><span class='line'>sudo apt-get update
</span><span class='line'>sudo apt-get install mongodb-10gen</span></code></pre></td></tr></table></div></figure>


<ol>
<li>Install the recommended JRE</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get install openjdk-6-jre</span></code></pre></td></tr></table></div></figure>


<ol>
<li>Grab and Install the Graylog2 Server (0.9.6)</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd /opt/graylog2
</span><span class='line'>sudo wget https://github.com/downloads/Graylog2/graylog2-server/graylog2-server-0.9.6.tar.gz
</span><span class='line'>sudo tar -xvf graylog2-server-0.9.6.tar.gz
</span><span class='line'>sudo cp /opt/graylog2/graylog2-server-0.9.6/graylog2.conf.example /etc/graylog2.conf</span></code></pre></td></tr></table></div></figure>


<ol>
<li>Add the Graylog2 user to Mongo</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mongo
</span><span class='line'>use graylog2
</span><span class='line'>db.addUser("graylog2","password")
</span><span class='line'>exit</span></code></pre></td></tr></table></div></figure>


<ol>
<li>Edit the Graylog2 config file</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo vim /etc/graylog2.conf
</span><span class='line'>
</span><span class='line'># Match These Settings
</span><span class='line'>mongodb_useauth=truemongodb_user=graylog2
</span><span class='line'>mongodb_password=passwordmongodb_host=127.0.0.1
</span><span class='line'>mongodb_database=graylog2 
</span><span class='line'>mongodb_port=27017</span></code></pre></td></tr></table></div></figure>


<ol>
<li>Kickoff the Graylog2 server and see how you did</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo ln -s /opt/graylog2/graylog2-server-0.9.6 /opt/graylog2/graylog2-server
</span><span class='line'>sudo ./graylog2ctl start
</span><span class='line'>Check logs</span></code></pre></td></tr></table></div></figure>


<h2>Elastic Search Installation</h2>

<ol>
<li>One Shot Install</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo wget https://github.com/downloads/elasticsearch/elasticsearch/elasticsearch-0.18.7.tar.gz
</span><span class='line'>sudo tar -xvf elasticsearch-0.18.7.tar.gz
</span><span class='line'>sudo elasticserach/bin/elasticearch #manual start</span></code></pre></td></tr></table></div></figure>


<p><a href="http://www.elasticsearch.org/guide/reference/setup/installation.html">More Details</a></p>

<h2>Graylog2 WebUI</h2>

<p>A few points here:
* For testing purposes we&#8217;re just running the webui out of rails. I&#8217;m not sure
  I&#8217;d do this in production
* RVM wasn&#8217;t installed. We don&#8217;t do RVM in product environments. Ocelet&#8217;s Ruby
  is good enough to roll into production
* I ran into issues with the date formats in the gemspec files. Just hack them
A few points here:
* For testing purposes we&#8217;re just running the webui out of rails. I&#8217;m not sure
  I&#8217;d do this in production
* RVM wasn&#8217;t installed. We don&#8217;t do RVM in product environments. Ocelet&#8217;s Ruby
  is good enough to roll into production
* I ran into issues with the date formats in the gemspec files. Just hack them</p>

<ol>
<li>Install Ruby
Ocelot comes with 1.8.7 standard so there is nothing to do here.  RVM is
definitely an option if you want.</li>
<li>Get the Graylog2 WebUI and ramp up rails</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd /opt/graylog2/
</span><span class='line'>sudo wget https://github.com/downloads/Graylog2/graylog2-web-interface/graylog2-web-interface-0.9.6.tar.gz
</span><span class='line'>sudo tar -xvf graylog2-web-interface-0.9.6.tar.gz
</span><span class='line'>sudo ln -sf graylog2-web-interface-0.9.6 graylog2-web-interface
</span><span class='line'>sudo apt-get install rubygems
</span><span class='line'>sudo gem install bundler
</span><span class='line'>sudo bundle install
</span><span class='line'>sudo apt-get install rails</span></code></pre></td></tr></table></div></figure>


<ol>
<li>Config and Launch</li>
<li>Edit the mongoid.yml to match your config. I suggest commenting out the test
and development sections.</li>
<li>Launch the WebUI from the cmdline:</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/opt/graylog2/graylog2-web-interface/scripts/rails server -e production</span></code></pre></td></tr></table></div></figure>


<h2>Annnnd you&#8217;re done</h2>

<p>At this point you should be read to rip logstash and start pumping all the logs
into the server.  In a later post I will announce a sweet cookbook for this AND
how to setup your logstash on the app server.  Also, I&#8217;m assessing how graylog2
can assist in compliance situations (HIPAA, SOX, ISO, etc) so stay tuned for my
thoughts and findings.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Logging as a Service]]></title>
    <link href="http://rwoolley.github.com/blog/2012/02/01/logging-as-a-service/"/>
    <updated>2012-02-01T20:23:00-07:00</updated>
    <id>http://rwoolley.github.com/blog/2012/02/01/logging-as-a-service</id>
    <content type="html"><![CDATA[<p>I&#8217;ve been running into a logging challenge at work of late.  The usual issue.
Lots of logs, in lots of places, retention policies, governance issues,
reporting and (in my humble opinion the most important) support/debugging.  After some searching I
found logg.ly and Papertrail which offered what I wanted as a service.  Very
sweet.  Unfortunately I cannot use them in this implementation so I am pursuing
Graylog2 and logstash (another blogpost on that later). Right now I&#8217;m plugging
Papertrail into our demo system to see how it goes and how it fits with our
workflow.  I just wanted to cover off some first impressions with Papertrail.</p>

<!--more-->


<ol>
<li><p>Compatability
We&#8217;re running RHEL 5.5 (don&#8217;t judge) so we&#8217;re using syslog. Luckily there is a
little gem from the Papertrail folks that allows you to pipe your app logs into
their service.  remote_syslog works very well!
Ruby 1.8.7 is our ruby of choice for production systems.  We don&#8217;t put RVM on
production boxes so our setup is simple in that regard.</p></li>
<li><p>Ease of Use
I love how I can see a window into all the events flying by. This sounds
ridiculous but I can see issues just by watching patterns in the logs. It&#8217;s
like using the force but it works for me.  Of course you can adjust the
granularity to a specific system.  Search is the next best thing.  90% of my
time spent grovelling in app logs is due to an issue.  Papertrail allows you to
quickly match the user-time-wtf was going on tuple.  Better yet, you can save
any search and run it later. Helpful when you want to see if a fix worked.</p></li>
</ol>


<p>First impressions are great at this point. I think Papertrail has legs.  The
next phase of my thoughts will be around retention and compliance with acts
like HIPAA.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Postfix]]></title>
    <link href="http://rwoolley.github.com/blog/2012/01/23/postfix/"/>
    <updated>2012-01-23T20:33:00-07:00</updated>
    <id>http://rwoolley.github.com/blog/2012/01/23/postfix</id>
    <content type="html"><![CDATA[<p>Recently the team was working on some stuff in EC2. This is a bit new for us so
we&#8217;re figuring many things out as we go.  One thing work sharing is integrating
a PHP web app running in EC2 to Amazon&#8217;s Simple Email Service.  Following the
guides gets you 90% of the way but the last mile had a snag.  Full disclosure,
none of us is email experts.</p>

<p>We implemented the PHP - Postfix - Stunnel - SES approach advocated by AWS.
The older option used <a href="http://docs.amazonwebservices.com/ses/latest/DeveloperGuide/Scripts.MTAs.Postfix.html">perl</a> and worked for us.  However, we did want to go after the best practice approach and it&#8217;s outlined with the <a href="http://docs.amazonwebservices.com/ses/latest/DeveloperGuide/SMTP.MTAs.Postfix.html">postfix setup</a> and the <a href="http://docs.amazonwebservices.com/ses/latest/DeveloperGuide/SMTP.MTAs.SecureTunnel.html">stunnel</a> setup.</p>

<p>The snag we hit was as follows: using the perl tools we could queue an email in
SES.  Note, when in sandbox mode you can only send to and from the verified
email addresses.  Do yourself a solid and setup two addresses.  Otherwise
reading the mail.log file will blow your mind.  When we tried to queue an email
from our PHP app through postfix across the stunnel to SES the to and from
fields were, in a word, effed up.  Turns out setting the MyDestination
parameter in the main.cf file of the postfix config was the culprit.  Also, in
our PHP.ini file we ensure that we were starting sendmail with the suggested
unix flags but that&#8217;s a red herring for this issue.  Our solution was to unset
the MyDestination parm and pow.  Up and running.  We think.  Here&#8217;s to a great
push by @ericchernuka, @dannydotellis, and @swinglinetrade to solve a stinker.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello Octopress]]></title>
    <link href="http://rwoolley.github.com/blog/2012/01/18/hello-octopress/"/>
    <updated>2012-01-18T19:57:00-07:00</updated>
    <id>http://rwoolley.github.com/blog/2012/01/18/hello-octopress</id>
    <content type="html"><![CDATA[<p>So I&#8217;ve switched to Octopress.  I am quite impressed with it and markdown.
Elegantly simple.  This might even encourage me blog more.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DevOps - Where to start]]></title>
    <link href="http://rwoolley.github.com/blog/2011/12/16/devops-where-to-start/"/>
    <updated>2011-12-16T23:29:00-07:00</updated>
    <id>http://rwoolley.github.com/blog/2011/12/16/devops-where-to-start</id>
    <content type="html"><![CDATA[<p><em>post rescued from my wordpress blog</em></p>

<p>A little over a year ago one of the Systems Engineers on my team (@rhettdickson) suggested I look into DevOps and maybe start adopting some of the practices.  What a prophetic suggestion.  Presently the Ops team at Calgary Scientific is in the midst of implementing many great DevOps ideas and practices.  I wanted to share some of the key things I have learned about getting started with DevOps.  This post is heavy on the links, twitter, blogs and opinions but I hope you find it interesting.</p>

<!--more-->


<p>What is DevOps?
Well, thatâ€™s a loaded question.  Iâ€™ll start with what itâ€™s not.  First, itâ€™s not a team or a role.  If you have a DevOps team or a dedicated DevOps role I think youâ€™re doing it wrong.  Secondly, itâ€™s not a cult itâ€™s a community.  An amazing, open, and strong community.  Just trawl through github and youâ€™ll see hundreds of little projects aimed at getting things done and out the door as easily as possible.  The best part, no one hoards their knowledge or experience; they are all willing to share.</p>

<p>So What is it?
Itâ€™s a revolution to change the way we deploy solutions, manage the configuration of those deployments, leverage the cloud and perhaps best of all bridge the gap between the developer world and the operations world.  How do you get to there?  Well, hereâ€™s how I started.</p>

<p>Twitter: Follow these people.
Twitter is very active for DevOps, just watch the #devops topic and youâ€™ll see.  There are many great tidbits that fly by during a day. This is the bare minimum list of people to follow on twitter.  Start here and add as you see fit.</p>

<p>John E. Vincent: @lusis
John is a DevOps badass.  Heâ€™s full of great ideas, sweet contributions to github and whenever I hit a snag chances are heâ€™s already hit it, posted a blog entry about it, coded some sweetness and posted it on github.</p>

<p>Chris Hartjes: @chartjes
Chris is the great communicator of DevOps. Read his blog archives. I did and itâ€™s been helping me win the battle within my organization to sell the concept of DevOps and its adoption. And heâ€™s hilarious.</p>

<p>Julian Simpson: @BuildDoctor
Julian is the Doc Holliday of DevOps.  Got a continuous integration system in place and think itâ€™s rock solid? Better be sure cuz heâ€™s your huckleberry.  Heâ€™ll unplug it and make you prove the robustness.  Then show you where you went wrong and how to fix it.</p>

<p>Gareth Rushgrove: @garethr
Gareth is like Batman. Mild mannered gentleman by day  but prowling the rooftops looking for crappy build systems, lame deployment practices and beating it out of you by night.  This is mostly supposition but youâ€™ll share my sentiments after following him.</p>

<p>Websites:
The proof is in the pudding.  If DevOps wasnâ€™t a real thing then there wouldnâ€™t be companies building tools and platforms for it.  There wouldnâ€™t be meet ups, conferences or DevOps Days.  But there are all these things.  Hereâ€™s some useful links and blogs. Put these into Reeder, Early Edition, Google Reader or something equally useful.  RSS is old but still awesome.</p>

<p><a href="http://www.opscode.com/">OpsCode</a>
<a href="http://puppetlabs.com/">Puppet</a>
<a href="https://github.com/">GitHub</a>
<a href="http://www.build-doctor.com/">BuildDr</a>
<a href="http://morethanseven.net/">morethanseven</a>
<a href="http://blog.lusis.org/">Lusis</a>
<a href="http://www.littlehart.net/atthekeyboard/">Hartjes</a></p>

<p>One More Thing &#8230;
Remember how I said Gareth Rushgrove was like Batman?  Hereâ€™s another reason why: he has his own digital Batcave for all things DevOps.  Every week he compiles a wonderful email with all the neatest stuff in the world of DevOps and sends it out.  This is the most important thing you can do: sign up for his email.  <a href="http://devopsweekly.com/">devopsWeekly</a></p>

<p>Thereâ€™s also an archive.  Itâ€™s the most accurate chronicle of the DevOps movement and laden with incredible information.  I wrote a script that pulled all the links out of the archive and pushed them to instapaper.  Then I read them all non-stop.</p>

<p>So, this would be how I started learning.  Maybe this will help you too.</p>
]]></content>
  </entry>
  
</feed>
